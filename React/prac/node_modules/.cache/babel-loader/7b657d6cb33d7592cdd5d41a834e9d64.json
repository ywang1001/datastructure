{"ast":null,"code":"import React, { useState, useEffect, Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  render() {}\n  /*constructor(props){\n    super(props);\n    this.state = {\n        time:0,\n        on: false\n    }\n  }\n   handleClick = () => {\n    if(!this.state.on) {\n      this.timer = setInterval(() => {\n          this.setState({\n            ...this.state,\n            time: this.state.time+1,\n            on: true\n          })\n      }, 1000);\n    }else {\n      this.setState({on: false})\n      clearInterval(this.timer);\n    }\n  }\n   handleClear = () => {\n    this.setState({\n      ...this.state,\n      time: 0,\n      on: false\n    })\n    clearInterval(this.timer);\n  }\n   render(){\n    return(\n      <div>\n          <p>{this.state.time}</p>\n          <div>\n             <button onClick = {this.handleClick}>{this.state.on ? 'stop' : 'start'}</button>\n             <button onClick = {this.handleClear}>clear</button>\n          </div>\n      </div>\n    )\n  }*/\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yicongwang/Desktop/htmlcss/React/prac/src/App.js"],"names":["React","useState","useEffect","Component","BrowserRouter","Route","Switch","App","render"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,QAA2C,kBAA3C;;AAGA,MAAOC,GAAP,SAAmBJ,SAAnB,CAA6B;AAE3BK,EAAAA,MAAM,GAAE,CAEP;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAN2B;;AAoD7B,eAAeD,GAAf","sourcesContent":["import React, {useState, useEffect, Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\n\nclass  App extends Component {\n\n  render(){\n\n  }\n\n  /*constructor(props){\n    super(props);\n    this.state = {\n        time:0,\n        on: false\n    }\n  }\n\n  handleClick = () => {\n    if(!this.state.on) {\n      this.timer = setInterval(() => {\n          this.setState({\n            ...this.state,\n            time: this.state.time+1,\n            on: true\n          })\n      }, 1000);\n    }else {\n      this.setState({on: false})\n      clearInterval(this.timer);\n    }\n  }\n\n  handleClear = () => {\n    this.setState({\n      ...this.state,\n      time: 0,\n      on: false\n    })\n    clearInterval(this.timer);\n  }\n\n  render(){\n    return(\n      <div>\n          <p>{this.state.time}</p>\n          <div>\n             <button onClick = {this.handleClick}>{this.state.on ? 'stop' : 'start'}</button>\n             <button onClick = {this.handleClear}>clear</button>\n          </div>\n      </div>\n    )\n  }*/\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}