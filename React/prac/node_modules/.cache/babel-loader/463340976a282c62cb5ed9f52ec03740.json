{"ast":null,"code":"var _jsxFileName = \"/Users/yicongwang/Desktop/htmlcss/React/prac/src/App.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-fom';\nimport Timer from './components/timer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: console.log(this.props.history),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, \"\\u8BA1\\u65F6\\u5668\"), /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/timer\",\n      exact: true,\n      component: Timer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }\n    }))));\n  }\n  /*constructor(props){\n    super(props);\n    this.state = {\n        time:0,\n        on: false\n    }\n  }\n   handleClick = () => {\n    if(!this.state.on) {\n      this.timer = setInterval(() => {\n          this.setState({\n            ...this.state,\n            time: this.state.time+1,\n            on: true\n          })\n      }, 1000);\n    }else {\n      this.setState({on: false})\n      clearInterval(this.timer);\n    }\n  }\n   handleClear = () => {\n    this.setState({\n      ...this.state,\n      time: 0,\n      on: false\n    })\n    clearInterval(this.timer);\n  }\n   render(){\n    return(\n      <div>\n          <p>{this.state.time}</p>\n          <div>\n             <button onClick = {this.handleClick}>{this.state.on ? 'stop' : 'start'}</button>\n             <button onClick = {this.handleClear}>clear</button>\n          </div>\n      </div>\n    )\n  }*/\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yicongwang/Desktop/htmlcss/React/prac/src/App.js"],"names":["React","useState","useEffect","Component","BrowserRouter","Route","Switch","Timer","App","constructor","props","state","render","console","log","history"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,QAA2C,kBAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAGA,MAAOC,GAAP,SAAmBL,SAAnB,CAA6B;AAE3BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAIC,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,OAAvB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,QAAd;AAAuB,MAAA,KAAK,MAA5B;AAA6B,MAAA,SAAS,EAAIR,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADJ,CAFJ,CADF;AAUH;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAtB2B;;AAoE7B,eAAeC,GAAf","sourcesContent":["import React, {useState, useEffect, Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-fom';\nimport Timer from './components/timer';\n\n\nclass  App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  render(){\n      return(\n        <div>\n            <button onClick = {console.log(this.props.history)}>计时器</button>\n            <BrowserRouter>\n                <Switch>\n                   <Route path = '/timer' exact component = {Timer}/>\n                </Switch>\n            </BrowserRouter>\n        </div>\n      )\n  }\n\n  /*constructor(props){\n    super(props);\n    this.state = {\n        time:0,\n        on: false\n    }\n  }\n\n  handleClick = () => {\n    if(!this.state.on) {\n      this.timer = setInterval(() => {\n          this.setState({\n            ...this.state,\n            time: this.state.time+1,\n            on: true\n          })\n      }, 1000);\n    }else {\n      this.setState({on: false})\n      clearInterval(this.timer);\n    }\n  }\n\n  handleClear = () => {\n    this.setState({\n      ...this.state,\n      time: 0,\n      on: false\n    })\n    clearInterval(this.timer);\n  }\n\n  render(){\n    return(\n      <div>\n          <p>{this.state.time}</p>\n          <div>\n             <button onClick = {this.handleClick}>{this.state.on ? 'stop' : 'start'}</button>\n             <button onClick = {this.handleClear}>clear</button>\n          </div>\n      </div>\n    )\n  }*/\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}